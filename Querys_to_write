
Consider following tables and data to create given queries

CREATE TABLE Employee (
  EmployeeID  INTEGER PRIMARY KEY,
  Name        VARCHAR(255) NOT NULL,
  Position    VARCHAR(255) NOT NULL,
  Salary      REAL NOT NULL,
  Remarks     VARCHAR(255)
); 

CREATE TABLE Planet (
  PlanetID    INTEGER PRIMARY KEY,
  Name        VARCHAR(255) NOT NULL,
  Coordinates REAL NOT NULL
); 

CREATE TABLE Shipment (
  ShipmentID    INTEGER PRIMARY KEY,
  ShipmentDate  DATE,
  Manager       INTEGER NOT NULL,
  Planet        INTEGER NOT NULL,
  FOREIGN KEY (Manager) REFERENCES Employee(EmployeeID),
  FOREIGN KEY (Planet) REFERENCES Planet(PlanetID)
);

CREATE TABLE Has_Clearance (
  Employee  INTEGER NOT NULL,
  Planet    INTEGER NOT NULL,
  Level     INTEGER NOT NULL,
  PRIMARY KEY(Employee, Planet),
  FOREIGN KEY (Employee) REFERENCES Employee(EmployeeID),
  FOREIGN KEY (Planet) REFERENCES Planet(PlanetID)
); 

CREATE TABLE Client (
  AccountNumber INTEGER PRIMARY KEY,
  Name          VARCHAR(255) NOT NULL
);
  
CREATE TABLE Package (
  Shipment      INTEGER NOT NULL,
  PackageNumber INTEGER NOT NULL,
  Contents      VARCHAR(255) NOT NULL,
  Weight        REAL NOT NULL,
  Sender        INTEGER NOT NULL,
  Recipient     INTEGER NOT NULL,
  PRIMARY KEY(Shipment, PackageNumber),
  FOREIGN KEY (Shipment) REFERENCES Shipment(ShipmentID),
  FOREIGN KEY (Sender) REFERENCES Client(AccountNumber),
  FOREIGN KEY (Recipient) REFERENCES Client(AccountNumber)
);


INSERT INTO Client VALUES(1, 'Zapp Brannigan');
INSERT INTO Client VALUES(2, "Al Gore's Head");
INSERT INTO Client VALUES(3, 'Barbados Slim');
INSERT INTO Client VALUES(4, 'Ogden Wernstrom');
INSERT INTO Client VALUES(5, 'Leo Wong');
INSERT INTO Client VALUES(6, 'Lrrr');
INSERT INTO Client VALUES(7, 'John Zoidberg');
INSERT INTO Client VALUES(8, 'John Zoidfarb');
INSERT INTO Client VALUES(9, 'Morbo');
INSERT INTO Client VALUES(10, 'Judge John Whitey');
INSERT INTO Client VALUES(11, 'Calculon');

INSERT INTO Employee VALUES(1, 'Phillip J. Fry', 'Delivery boy', 7500.0, 'Not to be confused with the Philip J. Fry from Hovering Squid World 97a');
INSERT INTO Employee VALUES(2, 'Turanga Leela', 'Captain', 10000.0, NULL);
INSERT INTO Employee VALUES(3, 'Bender Bending Rodriguez', 'Robot', 7500.0, NULL);
INSERT INTO Employee VALUES(4, 'Hubert J. Farnsworth', 'CEO', 20000.0, NULL);
INSERT INTO Employee VALUES(5, 'John A. Zoidberg', 'Physician', 25.0, NULL);
INSERT INTO Employee VALUES(6, 'Amy Wong', 'Intern', 5000.0, NULL);
INSERT INTO Employee VALUES(7, 'Hermes Conrad', 'Bureaucrat', 10000.0, NULL);
INSERT INTO Employee VALUES(8, 'Scruffy Scruffington', 'Janitor', 5000.0, NULL);

INSERT INTO Planet VALUES(1, 'Omicron Persei 8', 89475345.3545);
INSERT INTO Planet VALUES(2, 'Decapod X', 65498463216.3466);
INSERT INTO Planet VALUES(3, 'Mars', 32435021.65468);
INSERT INTO Planet VALUES(4, 'Omega III', 98432121.5464);
INSERT INTO Planet VALUES(5, 'Tarantulon VI', 849842198.354654);
INSERT INTO Planet VALUES(6, 'Cannibalon', 654321987.21654);
INSERT INTO Planet VALUES(7, 'DogDoo VII', 65498721354.688);
INSERT INTO Planet VALUES(8, 'Nintenduu 64', 6543219894.1654);
INSERT INTO Planet VALUES(9, 'Amazonia', 65432135979.6547);

INSERT INTO Has_Clearance VALUES(1, 1, 2);
INSERT INTO Has_Clearance VALUES(1, 2, 3);
INSERT INTO Has_Clearance VALUES(2, 3, 2);
INSERT INTO Has_Clearance VALUES(2, 4, 4);
INSERT INTO Has_Clearance VALUES(3, 5, 2);
INSERT INTO Has_Clearance VALUES(3, 6, 4);
INSERT INTO Has_Clearance VALUES(4, 7, 1);

INSERT INTO Shipment VALUES(1, '3004/05/11', 1, 1);
INSERT INTO Shipment VALUES(2, '3004/05/11', 1, 2);
INSERT INTO Shipment VALUES(3, NULL, 2, 3);
INSERT INTO Shipment VALUES(4, NULL, 2, 4);
INSERT INTO Shipment VALUES(5, NULL, 7, 5);

INSERT INTO Package VALUES(1, 1, 'Undeclared', 1.5, 1, 2);
INSERT INTO Package VALUES(2, 1, 'Undeclared', 10.0, 2, 3);
INSERT INTO Package VALUES(2, 2, 'A bucket of krill', 2.0, 8, 7);
INSERT INTO Package VALUES(3, 1, 'Undeclared', 15.0, 3, 4);
INSERT INTO Package VALUES(3, 2, 'Undeclared', 3.0, 5, 1);
INSERT INTO Package VALUES(3, 3, 'Undeclared', 7.0, 2, 3);
INSERT INTO Package VALUES(4, 1, 'Undeclared', 5.0, 4, 5);
INSERT INTO Package VALUES(4, 2, 'Undeclared', 27.0, 1, 2);
INSERT INTO Package VALUES(5, 1, 'Undeclared', 100.0, 5, 1);

Create all select queries as VIEW Object and name it as v1...vn

Q1) Display employess who name is "Turanga Leela" along with its shipment dertails.
    
    CREATE VIEW v1 AS SELECT * FROM employee e INNER JOIN shipment s ON e.employeeId = s.manager WHERE name = 'Turanga Leela';
    
    SELECT * FROM v1;
    +------------+---------------+----------+--------+---------+------------+------+---------+--------+
    | EmployeeID | Name          | Position | Salary | Remarks | ShipmentID | Date | Manager | Planet |
    +------------+---------------+----------+--------+---------+------------+------+---------+--------+
    |          2 | Turanga Leela | Captain  |  10000 | NULL    |          3 | NULL |       2 |      3 |
    |          2 | Turanga Leela | Captain  |  10000 | NULL    |          4 | NULL |       2 |      4 |
    +------------+---------------+----------+--------+---------+------------+------+---------+--------+

Q2) List those packages which are intented for client whose ids are 1,5 or 6

    CREATE VIEW v2 AS SELECT * FROM package WHERE recipient IN (1, 5, 6);
  
    SELECT * FROM v2;
    +----------+---------------+------------+--------+--------+-----------+
    | Shipment | PackageNumber | Contents   | Weight | Sender | Recipient |
    +----------+---------------+------------+--------+--------+-----------+
    |        3 |             2 | Undeclared |      3 |      5 |         1 |
    |        4 |             1 | Undeclared |      5 |      4 |         5 |
    |        5 |             1 | Undeclared |    100 |      5 |         1 |
    +----------+---------------+------------+--------+--------+-----------+

Q3) Display name of emnployee and plant which are cleared

    CREATE VIEW v3 AS SELECT e.name AS 'Employee Name', p.name AS 'Planet Name' FROM employee e INNER JOIN has_clearance h ON e.employeeid = h.employee INNER JOIN planet p ON h.planet = p.planetid;

    SELECT * FROM v3;
    +--------------------------+------------------+
    | Employee Name            | Planet Name      |
    +--------------------------+------------------+
    | Phillip J. Fry           | Omicron Persei 8 |
    | Phillip J. Fry           | Decapod X        |
    | Turanga Leela            | Mars             |
    | Turanga Leela            | Omega III        |
    | Bender Bending Rodriguez | Tarantulon VI    |
    | Bender Bending Rodriguez | Cannibalon       |
    | Hubert J. Farnsworth     | DogDoo VII       |
    +--------------------------+------------------+

Q4) Display details of shipment data (Month, Day YYYY), sender and receiver name whose package weight is between 5 and 10

    CREATE VIEW v4 AS
    -> SELECT DATE_FORMAT(s.shipmentDate, '%M, %d %Y'), sender.name AS 'sender', recipient.name AS 'recipient'
    ->  FROM shipment s
    ->  INNER JOIN package p
    ->  ON s.shipmentId = p.shipment
    ->  INNER JOIN client sender
    ->  ON sender.accountNumber = p.sender
    ->  INNER JOIN client recipient
    ->  ON recipient.accountNumber = p.recipient
    -> WHERE weight BETWEEN 5 AND 10;

    SELECT * FROM v4;
    +------------------------------------------+-----------------+---------------+
    | DATE_FORMAT(s.shipmentDate, '%M, %d %Y') | sender          | recipient     |
    +------------------------------------------+-----------------+---------------+
    | May, 11 3004                             | Al Gore's Head  | Barbados Slim |
    | NULL                                     | Al Gore's Head  | Barbados Slim |
    | NULL                                     | Ogden Wernstrom | Leo Wong      |
    +------------------------------------------+-----------------+---------------+

Q5) Give details of those shipments which are currently processed at plant name "Mars" or "Amazonia"

    CREATE VIEW v5 AS
        ->  SELECT s.shipmentId, s.shipmentDate, s.Manager AS 'employeeId', e.name AS 'employeeName', s.planet AS 'planetId', p.name
        ->  FROM shipment s
        ->  INNER JOIN planet p ON s.planet = p.planetId
        ->  INNER JOIN employee e ON s.manager = e.employeeId
        ->  WHERE (p.name = 'Mars' OR p.name = 'Amazonia');

    SELECT * FROM v5;
    +------------+--------------+------------+---------------+----------+------+
    | shipmentId | shipmentDate | employeeId | employeeName  | planetId | name |
    +------------+--------------+------------+---------------+----------+------+
    |          3 | NULL         |          2 | Turanga Leela |        3 | Mars |
    +------------+--------------+------------+---------------+----------+------+

Q6) List client names whose pakages are "Undeclared"

    CREATE VIEW v6_v1 AS
        -> SELECT c.name FROM client c INNER JOIN package p ON c.accountNumber = p.sender WHERE contents = 'Undeclared'
        -> UNION
        -> SELECT c.name FROM client c INNER JOIN package p ON c.accountNumber = p.recipient WHERE contents = 'Undeclared';


    SELECT * FROM v6_v1;
    +-----------------+
    | name            |
    +-----------------+
    | Zapp Brannigan  |
    | Al Gore's Head  |
    | Barbados Slim   |
    | Leo Wong        |
    | Ogden Wernstrom |
    +-----------------+
    
    OR 

    CREATE VIEW v6_v2 AS
        -> SELECT DISTINCT c.name FROM client c INNER JOIN package p ON c.accountNumber = p.sender WHERE contents = 'Undeclared';


    SELECT * FROM v6_v2;
    +-----------------+
    | name            |
    +-----------------+
    | Zapp Brannigan  |
    | Al Gore's Head  |
    | Barbados Slim   |
    | Leo Wong        |
    | Ogden Wernstrom |
    +-----------------+


Q7) Display those employees details containing salary format as $2,700.00

    CREATE VIEW v7 AS
        -> SELECT employeeId, name, position, CONCAT('$', FORMAT(salary, 'en_en'), '.00') as salary, remarks FROM employee;

    SELECT * FROM v7;
    +------------+--------------------------+--------------+------------+-------------------------------------------------------------------------+
    | employeeId | name                     | position     | salary     | remarks                                                                 |
    +------------+--------------------------+--------------+------------+-------------------------------------------------------------------------+
    |          1 | Phillip J. Fry           | Delivery boy | $7,500.00  | Not to be confused with the Philip J. Fry from Hovering Squid World 97a |
    |          2 | Turanga Leela            | Captain      | $10,000.00 | NULL                                                                    |
    |          3 | Bender Bending Rodriguez | Robot        | $7,500.00  | NULL                                                                    |
    |          4 | Hubert J. Farnsworth     | CEO          | $20,000.00 | NULL                                                                    |
    |          5 | John A. Zoidberg         | Physician    | $25.00     | NULL                                                                    |
    |          6 | Amy Wong                 | Intern       | $5,000.00  | NULL                                                                    |
    |          7 | Hermes Conrad            | Bureaucrat   | $10,000.00 | NULL                                                                    |
    |          8 | Scruffy Scruffington     | Janitor      | $5,000.00  | NULL                                                                    |
    +------------+--------------------------+--------------+------------+-------------------------------------------------------------------------+

Q8) Write query to Add remarks of those employee which are never remarked before.

    UPDATE employee SET remarks = CONCAT(name, ' has been a very good employee') WHERE remarks IS NULL;
    
    SELECT * FROM employee;
    +------------+--------------------------+--------------+--------+-------------------------------------------------------------------------+
    | EmployeeID | Name                     | Position     | Salary | Remarks                                                                 |
    +------------+--------------------------+--------------+--------+-------------------------------------------------------------------------+
    |          1 | Phillip J. Fry           | Delivery boy |   7500 | Not to be confused with the Philip J. Fry from Hovering Squid World 97a |
    |          2 | Turanga Leela            | Captain      |  10000 | Turanga Leela has been a very good employee                             |
    |          3 | Bender Bending Rodriguez | Robot        |   7500 | Bender Bending Rodriguez has been a very good employee                  |
    |          4 | Hubert J. Farnsworth     | CEO          |  20000 | Hubert J. Farnsworth has been a very good employee                      |
    |          5 | John A. Zoidberg         | Physician    |     25 | John A. Zoidberg has been a very good employee                          |
    |          6 | Amy Wong                 | Intern       |   5000 | Amy Wong has been a very good employee                                  |
    |          7 | Hermes Conrad            | Bureaucrat   |  10000 | Hermes Conrad has been a very good employee                             |
    |          8 | Scruffy Scruffington     | Janitor      |   5000 | Scruffy Scruffington has been a very good employee                      |
    +------------+--------------------------+--------------+--------+-------------------------------------------------------------------------+

Q9) Display employee details in following format "Phillip J. Fry is Delivery boy and earns $7,500.00/month"

    CREATE VIEW v9 AS SELECT CONCAT(name, ' is ', position,  ' and earns $', CONVERT(FORMAT(salary, 2) using utf8), '/month') as employeeDescription FROM employee;

    SELECT * FROM v9;
    +-------------------------------------------------------------+
    | employeeDescription                                         |
    +-------------------------------------------------------------+
    | Phillip J. Fry is Delivery boy and earns $7,500.00/month    |
    | Turanga Leela is Captain and earns $10,000.00/month         |
    | Bender Bending Rodriguez is Robot and earns $7,500.00/month |
    | Hubert J. Farnsworth is CEO and earns $20,000.00/month      |
    | John A. Zoidberg is Physician and earns $25.00/month        |
    | Amy Wong is Intern and earns $5,000.00/month                |
    | Hermes Conrad is Bureaucrat and earns $10,000.00/month      |
    | Scruffy Scruffington is Janitor and earns $5,000.00/month   |
    +-------------------------------------------------------------+

Q10) Update shipment date to current date for all data having NULL value

      UPDATE shipment SET shipmentDate = CURDATE() WHERE shipmentDate IS NULL;
      Query OK, 3 rows affected (0.06 sec)
      Rows matched: 3  Changed: 3  Warnings: 0

      SELECT * FROM shipment;
      +------------+--------------+---------+--------+
      | ShipmentID | ShipmentDate | Manager | Planet |
      +------------+--------------+---------+--------+
      |          1 | 3004-05-11   |       1 |      1 |
      |          2 | 3004-05-11   |       1 |      2 |
      |          3 | 2017-09-18   |       2 |      3 |
      |          4 | 2017-09-18   |       2 |      4 |
      |          5 | 2017-09-18   |       7 |      5 |
      +------------+--------------+---------+--------+


